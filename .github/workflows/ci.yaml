name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
env:
  GRADLE_BUILD_CACHE_PUSH: false
  GRADLE_BUILDCACHE_URL: ${{ secrets.BUILDCACHE_URL }}
  GRADLE_BUILDCACHE_USERNNAME: ${{ secrets.BUILDCACHE_USER }}
  GRADLE_BUILDCACHE_PASSWORD: ${{ secrets.BUILDCACHE_PASSWORD }}
  ORG_GRADLE_CACHING: true
  IS_PR: ${{ github.event_name == 'pull_request' }}

jobs:
  build:
    name: Build
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-20.04
    env:
      GRADLE_BUILD_CACHE_PUSH: true
    steps:
      - uses: actions/checkout@v2
      # Cache Gradle cache
      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v3.0.2
        with:
          path: |
            ~/.gradle/caches
            .gradle
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle.properties') }}
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '18'
      - uses: gradle/gradle-build-action@v1
        with:
          arguments: classes ktlintCheck
  push:
    name: Push
    runs-on: ubuntu-20.04
    needs: [ build ]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '18'
      - uses: gradle/gradle-build-action@v1
        with:
          arguments: :installDist
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login
        env:
          GITHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: docker login ghcr.io --username DRSchlaubi --password "$GITHUB_TOKEN"
      - name: Push Image
        run: |
          docker buildx build \
                  --tag  ghcr.io/drschlaubi/mikmusic/bot:"$GITHUB_SHA" \
                  --tag  ghcr.io/drschlaubi/mikmusic/bot:latest \
                  --file ./Dockerfile \
                  --output type=image,push=true .
  update_repository:
    name: Update repository
    runs-on: ubuntu-20.04
    needs: [ build ]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      GOOGLE_CLOUD_BUCKET: gs://mikbot-plugins
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '18'
      - name: 'Login to GCP'
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_ACCOUNT_KEY }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: 'Create working Directory'
        run: mkdir ci-repo ci-repo-old
      - name: 'Download existing repo'
        working-directory: ci-repo-old
        run: gsutil -m cp -R $GOOGLE_CLOUD_BUCKET/* .
      - name: 'Copy index'
        run: cp ci-repo-old/plugins.json ci-repo
      - uses: gradle/gradle-build-action@v1
        with:
          arguments: buildRepository
      - name: 'Upload repo changes'
        working-directory: ci-repo
        run: gsutil -m cp -R . $GOOGLE_CLOUD_BUCKET
  update_maven:
    name: Push to maven repo
    runs-on: ubuntu-20.04
    needs: [ build ]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '18'
      - uses: gradle/gradle-build-action@v1
        env:
          JFROG_USER: ${{ secrets.JFROG_USER }}
          JFROG_PASSWORD: ${{ secrets.JFROG_KEY }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        with:
          arguments: publish
  update_binary:
    name: Push binary to binary repo
    runs-on: ubuntu-20.04
    needs: [ build ]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      GOOGLE_CLOUD_BUCKET: gs://mikbot-binaries
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '18'
      - name: 'Login to GCP'
        id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_ACCOUNT_KEY }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'
      - name: 'Create working Directory'
        run: mkdir ci-repo
      - uses: gradle/gradle-build-action@v1
        with:
          arguments: installCi
      - name: 'Upload repo changes'
        working-directory: ci-repo
        run: gsutil -m cp -R . $GOOGLE_CLOUD_BUCKET
